<?xml version="1.0" encoding="UTF-8" ?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!--  
 This is the Solr schema file. This file should be named "schema.xml" and
 should be in the conf directory under the solr home
 (i.e. ./solr/conf/schema.xml by default) 
 or located where the classloader for the Solr webapp can find it.

 This example schema is the recommended starting point for users.
 It should be kept correct and concise, usable out-of-the-box.

 For more information, on how to customize this file, please see
 http://wiki.apache.org/solr/SchemaXml

 PERFORMANCE NOTE: this schema includes many optional features and should not
 be used for benchmarking.  To improve performance one could
  - set stored="false" for all fields possible (esp large fields) when you
    only need to search on the field but don't need to return the original
    value.
  - set indexed="false" if you don't need to search on the field, but only
    return the field as a result of searching on other indexed fields.
  - remove all unneeded copyField statements
  - for best index size and searching performance, set "index" to false
    for all general text fields, use copyField to copy them to the
    catchall "text" field, and use that for searching.
  - For maximum indexing performance, use the StreamingUpdateSolrServer
    java client.
  - Remember to run the JVM in server mode, and use a higher logging level
    that avoids logging every request
-->

<schema name="webarchive-discovery" version="1.5">
  <!-- attribute "name" is the name of this schema and is only used for display purposes.
       version="x.y" is Solr's version number for the schema syntax and 
       semantics.  It should not normally be changed by applications.

       1.0: multiValued attribute did not exist, all fields are multiValued 
            by nature
       1.1: multiValued attribute introduced, false by default 
       1.2: omitTermFreqAndPositions attribute introduced, true by default 
            except for text fields.
       1.3: removed optional field compress feature
       1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser
            behavior when a single string produces multiple tokens.  Defaults 
            to off for version >= 1.4
       1.5: omitNorms defaults to true for primitive field types 
            (int, float, boolean, string...)
     -->

 <fields>
   <!-- Valid attributes for fields:
     name: mandatory - the name for the field
     type: mandatory - the name of a field type from the 
       <types> fieldType section
     indexed: true if this field should be indexed (searchable or sortable)
     stored: true if this field should be retrievable
     multiValued: true if this field may contain multiple values per document
     omitNorms: (expert) set to true to omit the norms associated with
       this field (this disables length normalization and index-time
       boosting for the field, and saves some memory).  Only full-text
       fields or fields that need an index-time boost need norms.
       Norms are omitted for primitive (non-analyzed) types by default.
     termVectors: [false] set to true to store the term vector for a
       given field.
       When using MoreLikeThis, fields used for similarity should be
       stored for best performance.
     termPositions: Store position information with the term vector.  
       This will increase storage costs.
     termOffsets: Store offset information with the term vector. This 
       will increase storage costs.
     required: The field is required.  It will throw an error if the
       value does not exist
     default: a value that should be used if no value is specified
       when adding a document.
   -->

   <!-- field names should consist of alphanumeric or underscore characters only and
      not start with a digit.  This is not currently strictly enforced,
      but other field names will not have first class support from all components
      and back compatibility is not guaranteed.  Names with both leading and
      trailing underscores (e.g. _version_) are reserved.
   -->
        
   <field name="id" type="string" indexed="true" stored="true" required="true" multiValued="false" /> 
   
   <!-- Common metadata fields, named specifically to match up with
     SolrCell metadata when parsing rich documents such as Word, PDF.
     Some fields are multiValued only because Tika currently may return
     multiple values for them. Some metadata is parsed from the documents,
     but there are some which come from the client context:
       "content_type": From the HTTP headers of incoming stream
       "resourcename": From SolrCell request param resource.name
   -->
   <field name="title" type="text_general" indexed="true" stored="true" multiValued="false"/>
   <field name="subject" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="description" type="text_general" indexed="true" stored="true"/>
   <field name="comments" type="text_general" indexed="true" stored="true"/>
   <field name="author" type="string" indexed="true" stored="true"/>
   <field name="keywords" type="text_general" indexed="true" stored="true"/>
   <field name="url" type="string" indexed="true" stored="true"/>
   <field name="content_type" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="last_modified" type="date" indexed="true" stored="true"/>
   <field name="last_modified_year" type="string" indexed="true" stored="true"/>
   <field name="links" type="string" indexed="true" stored="true" multiValued="true"/>

   <!-- Main body of document extracted by SolrCell.
        NOTE: This field is not indexed by default, since it is also copied to "text"
        using copyField below. This is to save space. Use this field for returning and
        highlighting document content. Use the "text" field to search the content. -->
   <!-- BL: -->
   <field name="content" type="text_general" indexed="false" stored="true" multiValued="true" />
   <field name="content_text_length" type="tint" indexed="true" stored="true" multiValued="false"/>
   
   <!-- A general field to deposit metadata into so it can be searched even when unstructured. -->
   <field name="content_metadata" type="text_general" indexed="true" stored="true" multiValued="false"/>

   <!--  Perhaps useful in the future:
        termVectors="true" termPositions="true" termOffsets="true"/>
        -->
   
   <!-- -BL -->
   
   <!-- catchall field, containing all other searchable text fields (implemented
        via copyField further on in this schema)  -->
   <field name="text" type="text_general" indexed="true" stored="false" multiValued="true"/>
   
   <field name="_version_" type="long" indexed="true" stored="true"/>

   <!-- Uncommenting the following will create a "timestamp" field using
        a default value of "NOW" to indicate when each document was indexed.
     -->
   <!--
   <field name="timestamp" type="date" indexed="true" stored="true" default="NOW" multiValued="false"/>
     -->
     
   <!-- wa.bl.uk fields begin -->
   
   <!-- Core fields, in addition to those above -->
   <!-- The id_long is a long integer ID field used to distinguish records when integrated into systems 
        that required integer IDs.  Not guarenteed to be unique, unlike 'id': -->
   <field name="id_long" type="long" indexed="true" stored="true" multiValued="false"/>
   <!-- The url_type is used to distinguish certain URLs, e.g. so they can be 'title level records'.
        Values are 'slashpage' (for a hosts homepage), or 'embed' ? -->
   <field name="url_type" type="text_general" indexed="true" stored="true"/>
   <!-- Length of the content, in bytes: -->
   <field name="content_length" type="tint" indexed="true" stored="true" multiValued="false"/>
   <!-- The content encoding: -->
   <field name="content_encoding" type="string" indexed="true" stored="true" multiValued="false"/>
   <!-- The content language - ISO 639 Language Codes: -->
   <field name="content_language" type="string" indexed="true" stored="true" multiValued="false"/>
   <!-- The 'normalised' (simplified) content type: -->
   <field name="content_type_norm" type="string" indexed="true" stored="true" multiValued="false" default="other"/>
   
   <!-- The harvest date, but in wayback format: 'YYYYMMDDHHMMSS' -->   
   <field name="wayback_date" type="string" indexed="true" stored="true" multiValued="false"/>
   <!-- The ealiest harvest/crawl date, as a date, and also as multi-valued for hash-based ID. -->
   <field name="crawl_date" type="tdate" indexed="true" stored="true" multiValued="false"/>
   <field name="crawl_dates" type="tdate" indexed="true" stored="true" multiValued="true"/>
   <!-- The harvest/crawl year (for faceting), and also as multi-valued for hash-based ID. -->
   <field name="crawl_year" type="string" indexed="true" stored="true" multiValued="false"/>
   <field name="crawl_years" type="string" indexed="true" stored="true" multiValued="true"/>
   <!-- The harvest/crawl year and month, for faceting -->
   <field name="crawl_year_month" type="string" indexed="true" stored="true" multiValued="false"/>
   <!-- The harvest/crawl year, month and day, for faceting -->
   <field name="crawl_year_month_day" type="string" indexed="true" stored="true" multiValued="false"/>
   
   <!-- The domain for this URL: -->
   <field name="host" type="string" indexed="true" stored="true" multiValued="false" docValues="true"/>
   <!-- The private suffix a.k.a domain for this host: -->
   <field name="domain" type="string" indexed="true" stored="true" multiValued="false" docValues="true"/>
   <!-- The public suffix of the host domain, i.e. co.uk, org, etc: -->
   <field name="public_suffix" type="string" indexed="true" stored="true" multiValued="false"/>
   
   <!-- The hostnames of discovered outlinks -->
   <field name="links_hosts" type="string" indexed="true" stored="true" multiValued="true" docValues="true"/>
   <!-- The private suffixs of the target domains of any links, i.e. example.co.uk, example.org, etc: -->
   <field name="links_domains" type="string" indexed="true" stored="true" multiValued="true" docValues="true"/>
   <!-- The public suffixs of the target domains of any links, i.e. co.uk, org, etc: -->
   <field name="links_public_suffixes" type="string" indexed="true" stored="true" multiValued="true"/>
   
   <!-- The digest/hash of the content (e.g. sha1:UYIPOGACBXSSCQVMBGTCGYOFBHFO5TTL, WARC only?): -->
   <field name="hash" type="string" indexed="true" stored="true" multiValued="true"/>   

   <!-- The referring URL - not actually populated at present. -->   
   <field name="referrer_url" type="string" indexed="false" stored="true" multiValued="false"/>
      
     <!-- The publication date, as a date -->
   <field name="publication_date" type="tdate" indexed="true" stored="true" multiValued="false"/>
   <!-- The publication year, for faceting -->
   <field name="publication_year" type="string" indexed="true" stored="true" multiValued="false"/>
   
   <!-- Collections this item belongs to (top-level, not sub-collections) -->
   <field name="collection" type="string" indexed="true" stored="true" multiValued="true"/>
   
   <!-- All collections and sub-collections this item belongs to -->
   <field name="collections" type="string" indexed="true" stored="true" multiValued="true"/>
   
   <!-- NOTE on Text - note that neither 'text' nor 'text_ns' are stored, and therefore not retrievable/fragment-highlight-able -->
   
   <!-- WCT fields -->
   <field name="wct_target_id" type="string" indexed="true" stored="true" multiValued="false"/>
   <field name="wct_instance_id" type="int" indexed="true" stored="true" multiValued="false"/>
   <field name="wct_collections" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="wct_subjects" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="wct_description" type="text_general" indexed="true" stored="true"/>
   <field name="wct_title" type="string" indexed="true" stored="true"/>
   <field name="wct_agency" type="string" indexed="true" stored="true" multiValued="false"/> <!-- default="British Library"/  -->
   <!-- WCT fields that should no longer use WCT-specific names? -->
<!--    <field name="wct_domain" type="string" indexed="true" stored="true" multiValued="false"/> -->
<!--    <field name="wct_url" type="string" indexed="true" stored="true" multiValued="false"/> -->
<!--    <field name="wct_wayback_date" type="string" indexed="true" stored="true" multiValued="false"/> -->
<!--    <field name="wct_harvest_date" type="tdate" indexed="true" stored="true" multiValued="false"/> -->

   <!-- Format fields -->

   <!-- The version of the content type, e.g. '1.4' for PDF-1.4: -->
   <field name="content_type_version" type="string" indexed="true" stored="true" multiValued="false"/>
   <!-- The 'full' content type, e.g. including charset parameters: -->
   <field name="content_type_full" type="string" indexed="true" stored="true" multiValued="false"/>
   <!-- The content type, as determined via Apache Tika: -->
   <field name="content_type_tika" type="string" indexed="true" stored="true" multiValued="false"/>
   <!-- The content type, as determined by Droid: -->
   <field name="content_type_droid" type="string" indexed="true" stored="true" multiValued="false"/>
   <!-- The content type, as supplied by the original server: -->
   <field name="content_type_served" type="string" indexed="true" stored="true" multiValued="false"/>
   <!-- The content type, as supplied by the URI extension: -->
   <field name="content_type_ext" type="string" indexed="true" stored="true" multiValued="false"/>
   <!-- The first four bytes of the bitstream, suitably hex-encoded as a string ('xxxxxxxx'): -->
   <field name="content_ffb" type="string" indexed="true" stored="true" multiValued="false"/>
   <!-- The binary n-grams first few bytes of the bitstream, hex-encoded and space separated ('xx xx xx xx'): -->
   <field name="content_first_bytes" type="hex_text_shingle" indexed="true" stored="true" multiValued="false"/>
   
   <!-- The identification of the server that produced the response: -->
   <field name="server" type="string" indexed="true" stored="true" multiValued="true"/>

   <!-- The software generators or creator tools, that can be determined from the item: -->
   <field name="generator" type="string" indexed="true" stored="true" multiValued="true"/>

   <!-- Any Parse Error encountered while attempting to extract metadata and text: -->
   <field name="parse_error" type="string" indexed="true" stored="true" multiValued="true"/>
   
   <!-- Results of checking if PDFs are valid PDF/A: -->
   <field name="pdf_pdfa_is_valid" type="string" indexed="true" stored="true" multiValued="false"/>
   <field name="pdf_pdfa_errors" type="string" indexed="true" stored="true" multiValued="true"/>
   
   <!-- Root namespace of XML documents: -->
   <field name="xml_root_ns" type="string" indexed="true" stored="true" multiValued="false"/>

   <!-- Content-based fields -->
   
   <!-- Postcode fields: -->
   <!-- The full postcode, e.g. LS11 5RR. -->
   <field name="postcode" type="string" indexed="true" stored="true" multiValued="true"/>
   <!-- The postcode district, e.g. LS11. -->
   <field name="postcode_district" type="string" indexed="true" stored="true" multiValued="true"/>
   <!-- The locations mentioned in each page. -->
   <field name="locations" type="location" indexed="true" stored="true" multiValued="true"/>
   
   <!-- Sentiment analysis, as facets and as score: -->
   <field name="sentiment" type="string" indexed="true" stored="true" multiValued="false"/>
   <field name="sentiment_score" type="float" indexed="true" stored="true" multiValued="false"/>
   
   <!-- The size of images, in pixels? or tags/ranges? -->
   <field name="image_width" type="tint" indexed="true" stored="true" multiValued="false"/>
   <field name="image_height" type="tint" indexed="true" stored="true" multiValued="false"/>
   <field name="image_size" type="tint" indexed="true" stored="true" multiValued="false"/>
   <!-- Locations of faces detected in the images -->
   <field name='image_faces_count' type='tint' indexed='true' stored='true' multiValued='false'/>
   <field name='image_faces' type='string' indexed='false' stored='true' multiValued='true'/>
   <!-- The dominant colours extracted from the images -->
   <field name='image_colours' type='string' indexed='true' stored='true' multiValued='true'/>
   <field name='image_dominant_colour' type='string' indexed='true' stored='true' multiValued='false'/>

   <!-- The different HTML elements used by the document -->
   <field name="elements_used" type="string" indexed="true" stored="true" multiValued="true"/>

   <!-- Fuzzy hashing for detecting similar content.
        Uses a dynamic field definition to allow for variations in block sizes. -->
   <dynamicField name="ssdeep_hash_bs_*" type="string" indexed="true" stored="true" multiValued="false"/>
   <dynamicField name="ssdeep_hash_ngram_bs_*" type="literal_ngram" indexed="true" stored="true" multiValued="false"/>
   
   <!-- Details of any embedded licenses: -->
   <field name="license_url" type="string" indexed="true" stored="true" multiValued="true"/>

   <!-- wa.bl.uk fields end -->

   
 </fields>


 <!-- Field to use to determine and enforce document uniqueness. 
      Unless this field is marked with required="false", it will be a required field
   -->
 <uniqueKey>id</uniqueKey>

 <!-- DEPRECATED: The defaultSearchField is consulted by various query parsers when
  parsing a query string that isn't explicit about the field.  Machine (non-user)
  generated queries are best made explicit, or they can use the "df" request parameter
  which takes precedence over this.
  Note: Un-commenting defaultSearchField will be insufficient if your request handler
  in solrconfig.xml defines "df", which takes precedence. That would need to be removed.
 <defaultSearchField>text</defaultSearchField> -->

 <!-- DEPRECATED: The defaultOperator (AND|OR) is consulted by various query parsers
  when parsing a query string to determine if a clause of the query should be marked as
  required or optional, assuming the clause isn't already marked by some operator.
  The default is OR, which is generally assumed so it is not a good idea to change it
  globally here.  The "q.op" request parameter takes precedence over this.
 --> <solrQueryParser defaultOperator="AND"/>

  <!-- copyField commands copy one field to another at the time a document
        is added to the index.  It's used either to index the same field differently,
        or to add multiple fields to the same field for easier/faster searching.  -->

   <!-- wa.bl.uk copies begin -->
   <!-- Metadata fields to add to default search: -->
   <copyField source="title" dest="text"/>
   <copyField source="author" dest="text"/>
   <copyField source="keywords" dest="text"/>
   <copyField source="description" dest="text"/>
   <copyField source="wct_title" dest="text"/>
   <copyField source="wct_description" dest="text"/>
   <copyField source="url" dest="text"/>
   <!-- Also copy in the actual text payload to ensure it is actually indexed: -->
   <copyField source="content" dest="text"/>
   
   <!-- wa.bl.uk end begin -->
    
  <types>
   <!-- wa.bl.uk fieldTypes begin -->
  
   <fieldtype name="literal_ngram" stored="false" indexed="true" class="solr.TextField" >
      <analyzer>
         <tokenizer class="solr.WhitespaceTokenizerFactory"/>
         <filter class="solr.NGramFilterFactory" minGramSize="2" maxGramSize="5" />
      </analyzer>
   </fieldtype>
   <fieldType name="hex_text_shingle" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <!-- TODO Determine if larger shingle sizes are worth using, given there will be post-hoc stitching anyway. -->
        <filter class="solr.ShingleFilterFactory" minShingleSize="4" maxShingleSize="8"
             outputUnigrams="false" outputUnigramsIfNoShingles="false" tokenSeparator=" "/>
      </analyzer>
   </fieldType>
   <!-- wa.bl.uk fieldTypes end -->  
  
    <!-- field type definitions. The "name" attribute is
       just a label to be used by field definitions.  The "class"
       attribute and any other attributes determine the real
       behavior of the fieldType.
         Class names starting with "solr" refer to java classes in a
       standard package such as org.apache.solr.analysis
    -->

    <!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" />

    <!-- boolean type: "true" or "false" -->
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>

    <!-- sortMissingLast and sortMissingFirst attributes are optional attributes are
         currently supported on types that are sorted internally as strings
         and on numeric types.
	     This includes "string","boolean", and, as of 3.5 (and 4.x),
	     int, float, long, date, double, including the "Trie" variants.
       - If sortMissingLast="true", then a sort on this field will cause documents
         without the field to come after documents with the field,
         regardless of the requested sort order (asc or desc).
       - If sortMissingFirst="true", then a sort on this field will cause documents
         without the field to come before documents with the field,
         regardless of the requested sort order.
       - If sortMissingLast="false" and sortMissingFirst="false" (the default),
         then default lucene sorting will be used which places docs without the
         field first in an ascending sort and last in a descending sort.
    -->    

    <!--
      Default numeric field types. For faster range queries, consider the tint/tfloat/tlong/tdouble types.
    -->
    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>

    <!--
     Numeric field types that index each value at various levels of precision
     to accelerate range queries when the number of values between the range
     endpoints is large. See the javadoc for NumericRangeQuery for internal
     implementation details.

     Smaller precisionStep values (specified in bits) will lead to more tokens
     indexed per value, slightly larger index size, and faster range queries.
     A precisionStep of 0 disables indexing at different precision levels.
    -->
    <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" positionIncrementGap="0"/>

    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
         is a more restricted form of the canonical representation of dateTime
         http://www.w3.org/TR/xmlschema-2/#dateTime    
         The trailing "Z" designates UTC time and is mandatory.
         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
         All other components are mandatory.

         Expressions can also be used to denote calculations that should be
         performed relative to "NOW" to determine the value, ie...

               NOW/HOUR
                  ... Round to the start of the current hour
               NOW-1DAY
                  ... Exactly 1 day prior to now
               NOW/DAY+6MONTHS+3DAYS
                  ... 6 months and 3 days in the future from the start of
                      the current day
                      
         Consult the DateField javadocs for more information.

         Note: For faster range queries, consider the tdate type
      -->
    <fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>

    <!-- A Trie based date field for faster date range queries and date faceting. -->
    <fieldType name="tdate" class="solr.TrieDateField" precisionStep="6" positionIncrementGap="0"/>

        <!-- solr.TextField allows the specification of custom text analyzers
         specified as a tokenizer and a list of token filters. Different
         analyzers may be specified for indexing and querying.

         The optional positionIncrementGap puts space between multiple fields of
         this type on the same document, with the purpose of preventing false phrase
         matching across fields.

         For more info on customizing your analyzer chain, please see
         http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
     -->

    <!-- A general text field that has reasonable, generic
         cross-language defaults: it tokenizes with StandardTokenizer,
	 removes stop words from case-insensitive "stopwords.txt"
	 (empty by default), and down cases.  At query time only, it
	 also applies synonyms. -->
    <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>
        
 </types>
  
</schema>
